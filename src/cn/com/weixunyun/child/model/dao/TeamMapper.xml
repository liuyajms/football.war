<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.weixunyun.child.model.dao.TeamMapper">

    <select id="select" resultType="Team" parameterType="long">
        select * from team where id=#{id}
    </select>

    <select id="get" resultType="TeamVO" parameterType="long">
        SELECT
        T .*, C . NAME AS court_name,
        <!--
        (
            SELECT
                COUNT (*)
            FROM
                team_player tp
            WHERE
                tp.team_id = T . ID
        ) AS player_count,
        -->
        (
            SELECT
                EXTRACT (
                    YEAR
                    FROM
                        AVG (age(now(), birthday))
                )
            FROM
                player P
            JOIN team_player tp ON P . ID = tp.player_id
            WHERE
                tp.team_id = T . ID
        ) AS avg_age
    FROM
        team T
    LEFT JOIN court C ON C . ID = T .court_id
        WHERE
            T . ID = #{id,jdbcType=NUMERIC}
    </select>

    <select id="getList" resultType="TeamVO" parameterType="map">
        select t.*,
        (select count(*) from team_player tp where tp.team_id=t.id) as player_count
        from team t
        where t.tmp is not true
        <if test="city !=null">
            and t.address like '%'|| #{city}||'%'
        </if>
        <if test="beginAge !=null">
            <![CDATA[
                and birthday <=
            ]]>
            (current_date - (#{beginAge} || ' year')::interval)
        </if>
        <if test="endAge !=null">
            and birthday >= (current_date - (#{endAge} || ' year')::interval)
        </if>
        <if test="rule !=null">
            <![CDATA[
                and t.rule & #{rule} > 0
                ]]>
        </if>
        <if test="keyword !=null and keyword !=''">
            and ( t.name like '%'|| #{keyword}||'%' )
        </if>
        <choose>
            <when test="srcTeamId !=null">
                and t.src_team_id=#{srcTeamId}
            </when>
            <otherwise>
                and t.src_team_id is null
            </otherwise>
        </choose>
        order by t.id desc
        <if test="rows !=null and rows !=0">
            limit #{rows} offset #{offset}
        </if>
    </select>

    <delete id="delete" parameterType="long">
        delete from team
        where id = #{id,jdbcType=NUMERIC}
    </delete>

    <insert id="insert" parameterType="Team" >
    insert into team (id, name, rule,
      color, court_id, address,
      description, src_team_id, create_time,
      create_player_id, update_time, tmp, group_id)
    values (#{id,jdbcType=NUMERIC}, #{name,jdbcType=VARCHAR}, #{rule,jdbcType=INTEGER},
      #{color,jdbcType=INTEGER}, #{courtId,jdbcType=NUMERIC}, #{address,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{srcTeamId}, #{createTime,jdbcType=TIMESTAMP},
      #{createPlayerId,jdbcType=NUMERIC}, #{updateTime,jdbcType=TIMESTAMP}, #{tmp}, #{groupId})
  </insert>

    <update id="update" parameterType="Team" >
        update team
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="rule != null" >
                rule = #{rule,jdbcType=INTEGER},
            </if>
            <if test="color != null" >
                color = #{color,jdbcType=INTEGER},
            </if>
            <if test="courtId != null" >
                court_id = #{courtId,jdbcType=NUMERIC},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createPlayerId != null" >
                create_player_id = #{createPlayerId,jdbcType=NUMERIC},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=NUMERIC}
    </update>

    <update id="updated" parameterType="long">
        update player set last_time=now() where id=#{id}
    </update>
    
</mapper>