<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.weixunyun.child.model.dao.PlayerMapper">

    <sql id="BaseSelect">
        select p.*, dv.name as leg_name
        from player p
        left join dictionary_value dv
        on dv.dictionary_table_code = 'player'
        and dictionary_field_code = 'leg'
        and dv.code=p.leg
    </sql>

    <select id="get" resultType="PlayerVO" parameterType="long">
        <include refid="BaseSelect"/>
        where p.id = #{id,jdbcType=NUMERIC}
    </select>

    <select id="getList" resultType="PlayerVO" parameterType="map">
        select p.*, dv.name as leg_name
        <if test="px !=null and py !=null">
            , round(earth_distance(ll_to_earth(py, px), ll_to_earth(#{py}, #{px}))) AS distance
        </if>
        from player p
        left join dictionary_value dv
        on dv.dictionary_table_code = 'player'
        and dictionary_field_code = 'leg'
        and dv.code=p.leg
        <where>
            <if test="city !=null">
                and p.address like '%'|| #{city}||'%'
            </if>
            <if test="beginAge !=null">
                <![CDATA[
                and birthday <=
                ]]>
                (current_date - (#{beginAge} || ' year')::interval)
            </if>
            <if test="endAge !=null">
                and birthday >= (current_date - (#{endAge} || ' year')::interval)
            </if>
            <if test="role !=null">
                <![CDATA[
                and p.role & #{role} > 0
                ]]>
            </if>
            <if test="keyword !=null and keyword !=''">
                and ( p.name like '%'|| #{keyword}||'%'
                or p.id in (
                    SELECT tp.player_id from team_player tp
                    left join team t on t.id=tp.team_id
                    left join court c on c.id=t.court_id
                    where c.name like
                   '%'|| #{keyword}||'%'
                ))
            </if>
        </where>
        <choose>
            <when test="px !=null and py !=null">
                order by distance
            </when>
            <otherwise>
                order by p.id desc
            </otherwise>
        </choose>
        <if test="rows !=null and rows !=0">
            limit #{rows} offset #{offset}
        </if>
    </select>

    <select id="login" parameterType="map" resultType="PlayerVO">
        <include refid="BaseSelect"/>
        where p.mobile=#{username}
        <if test="password !=null">
            and p.password=#{password}
        </if>
    </select>

    <delete id="delete" parameterType="long">
    delete from player
    where id = #{id,jdbcType=NUMERIC}
  </delete>
    <insert id="insert" parameterType="Player">
    insert into player (id, name, sex, 
      birthday, height, weight, 
      role, leg, address, 
      description, px, py, 
      create_time, update_time, last_time, mobile,
      password, enabled, type
      )
    values (#{id,jdbcType=NUMERIC}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=NUMERIC}, 
      #{birthday,jdbcType=DATE}, #{height,jdbcType=NUMERIC}, #{weight,jdbcType=NUMERIC}, 
      #{role,jdbcType=INTEGER}, #{leg,jdbcType=NUMERIC}, #{address,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{px,jdbcType=NUMERIC}, #{py,jdbcType=NUMERIC}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime}, #{lastTime,jdbcType=TIMESTAMP}, #{mobile,jdbcType=CHAR},
      #{password,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{type,jdbcType=INTEGER}
      )
  </insert>

    <update id="update" parameterType="Player" >
        update player
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=NUMERIC},
            </if>
            <if test="birthday != null" >
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="height != null" >
                height = #{height,jdbcType=NUMERIC},
            </if>
            <if test="weight != null" >
                weight = #{weight,jdbcType=NUMERIC},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="leg != null" >
                leg = #{leg,jdbcType=NUMERIC},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="px != null" >
                px = #{px,jdbcType=NUMERIC},
            </if>
            <if test="py != null" >
                py = #{py,jdbcType=NUMERIC},
            </if>
            <if test="mobile != null" >
                mobile = #{mobile,jdbcType=CHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null" >
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            update_time=now()
        </set>
        where id = #{id,jdbcType=NUMERIC}
    </update>
    <!--
    <update id="update" parameterType="Player">
        update player
        set name = #{name,jdbcType=VARCHAR},
          sex = #{sex,jdbcType=NUMERIC},
          birthday = #{birthday,jdbcType=DATE},
          height = #{height,jdbcType=NUMERIC},
          weight = #{weight,jdbcType=NUMERIC},
          role = #{role,jdbcType=INTEGER},
          leg = #{leg,jdbcType=NUMERIC},
          address = #{address,jdbcType=VARCHAR},
          description = #{description,jdbcType=VARCHAR},
          px = #{px,jdbcType=NUMERIC},
          py = #{py,jdbcType=NUMERIC},
          update_time = #{updateTime,jdbcType=TIMESTAMP},
          type = #{type,jdbcType=INTEGER}
        where id = #{id,jdbcType=NUMERIC}
  </update>
-->
    <update id="updated" parameterType="long">
        update player set last_time=now() where id=#{id}
    </update>
    
    <update id="updateInfo" parameterType="map">
        update player
        <set>
            <if test="password !=null">
                password=#{password}
            </if>
        </set>
        update_time=now()
        where id=#{id}
    </update>
</mapper>